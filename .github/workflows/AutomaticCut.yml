# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "CURRENT_DATE=$(date "+%Y.%m.%d-%H.%M.%S")" >> $GITHUB_ENV
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository code
        uses: actions/checkout@v2
        with: 
          ref: master ## Need to change this to your base branch
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Merge master to staging
        uses: everlytic/branch-merge@1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_ref: ${{ github.ref }} ## Current Checked out Branch Master
          target_branch: 'staging' ## Branch we wish to merge into staging
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}' 
      - name: Merge has Failed
        if: ${{ failure() }}
        run: echo "Send message to Slack about merge failure - needs manual intervention"
        
      - name: Checkout staging
        uses: actions/checkout@v2
        with: 
          ref: staging ## Need to change this to your base branch
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build Change Log
        shell: bash
        run: |
          CHANGE_LOG=$(git cherry -v origin/release | awk '$0=$2' | git log --no-walk --stdin --pretty='%Cred%h%Creset %s (%ci) %cn:<%an>')
          echo "CHANGE_LOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGE_LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        id: change_log
        
      - uses: actions/checkout@v2
        with:
          ref: staging ## Need to change this to your base branch
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Pull Request
        id: autopr
        uses: peter-evans/create-pull-request@v3
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            commit-message: Auto-generated per github action
            title: "Automatic Cut and Pull Request ${{env.CURRENT_DATE}}"
            body: |
              This PR is auto-generated by 
              [create-pull-request](https://github.com/peter-evans/create-pull-request).
              
              ${{env.CHANGE_LOG}}
              
            branch: automated-cut
            delete-branch: true
            labels: automated pr
            reviewers: mje0002
            base: release
            
      #- name: Failed to create Pull Request
      #  if: ${{ failure() }}
      #  run: echo "Send message to Slack about Pull Request"
      #- name: Created Pull Request
      #  if: ${{ success() }}
      #  run: echo "Send message to Slack about Pull Request ${{ steps.autopr.outputs.pull-request-number }} - ${{ steps.autopr.outputs.pull-request-url }}"
        
      #- name: Generate Jira Ticket for Pull Request to release
      #  run: echo "Generating JIRA ticket for PR \n ${{env.PR_DIFF}}"
      #- name: Created Jira Ticket
      #  if: ${{ success() }}
      #  run: echo "Send message to Slack about Pull Request and Jira Ticket"
      #- name: Failed to create Jira Ticket
      #  if: ${{ failure() }}
      #  run: echo "Send message to Slack about Pull Request"
